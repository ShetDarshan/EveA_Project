{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","components/layout/Navbar.js","components/layout/Footer.js","components/layout/Landing.js","components/common/TextFieldGroup.js","components/authentication/Register.js","components/dashboard/Dashboard.js","components/authentication/Login.js","validations/is-empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutuser","dispatch","localStorage","removeItem","Navbar","e","preventDefault","this","props","isAuthenticated","auth","authLinks","className","to","href","onClick","onLogoutClick","bind","guestLinks","data-toggle","data-target","id","Component","connect","state","Footer","Landing","TextFieldGroup","name","placeholder","value","error","label","info","onChange","disabled","classnames","defaultProps","Register","setState","target","onSubmit","nuser","handle","email","password","confirmPassword","reguser","history","password2","errors","push","nextProps","noValidate","userInfo","post","then","res","data","catch","err","response","withRouter","Dashboard","dashboardContent","user","Login","luser","class","data-width","data-size","data-button-type","data-auto-logout-link","data-use-continue-as","async","defer","crossorigin","src","userData","setItem","jwt_decode","isEmpty","undefined","Object","keys","length","trim","initialState","combineReducers","action","midleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","jwtToken","CurrentTime","Date","now","exp","window","location","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf1e8da2.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst setAuthToken = token => {\n    if(token) {\n        //Applying to every request\n        axios.defaults.headers.common['Authorization'] = token;\n    \n    } else {\n        //deleting auth header\n        delete axios.defaults.headers.common['Authorization'];\n    }\n};\n\nexport default setAuthToken;","import axios from 'axios';\nimport { GET_ERRORS,SET_CURRENT_USER } from './types';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode'\n\n\nexport const reguser = (userInfo,history) => dispatch => {\n    axios\n      .post('/api/v1/register', userInfo)\n      .then(res => {\n        const { token } = res.data;\n        setAuthToken(token);\n          history.push('/login')})\n      .catch(err => \n          dispatch({\n              type: GET_ERRORS,\n              payload: err.response.data\n          })\n           );\n};\n\nexport const luser = (userData,history) => (dispatch) => {\n    axios\n        .post('/api/v1/login',userData)\n        .then(res => {\n            const { token } = res.data;\n            localStorage.setItem('jwtToken',token);\n            setAuthToken(token);\n            //decoding token to get user information\n            const decoded = jwt_decode(token);\n            //setting current user\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n\n        );\n};\n\n  export const setCurrentUser = (decoded) => {\n    return {\n        type:SET_CURRENT_USER,\n        payload: decoded\n    };\n    \n};\n\nexport const logoutuser = () => dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n};\n// const setAuthorizationHeader = (token) => {\n//     const FBIdToken = `Bearer ${token}`;\n//     localStorage.setItem('FBIdToken', FBIdToken);\n//     axios.defaults.headers.common['Authorization'] = FBIdToken;\n//   };","export const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n\n\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {logoutuser} from '../../actions/authActions'\n class Navbar extends Component {\n   onLogoutClick(e){\n     e.preventDefault();\n     this.props.logoutuser();\n   }\n  render() {\n    const { isAuthenticated } = this.props.auth;\n\n    const authLinks = (\n      <ul className=\"navbar-nav ml-auto\">\n         <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/dashboard\">Dashboard</Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" onClick={this.onLogoutClick.bind(this)} className = \"nav-link\">\n                Logout\n                </a>\n              </li>\n            </ul>\n    );\n\n    const guestLinks = (\n      <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/register\">Sign Up</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/login\">Login</Link> \n              </li>\n            </ul>\n   );\n    \n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">EVEA</Link>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n    \n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/profiles\"> Profile\n                </Link>\n              </li>\n            </ul>\n            {isAuthenticated? authLinks : guestLinks} \n            \n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\nNavbar.propTypes = {\n  logoutuser: PropTypes.func.isRequired,\n  auth: PropTypes.func.isRequired\n}\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps,{ logoutuser }) (Navbar);","import React, { Component } from 'react'\n\n\n class Footer extends Component {\n  render() {\n    return (\n        <footer className=\"bg-dark text-white mt-5 p-4 text-center\">\n        Copyright EVEA &copy; 2019 DIT\n      </footer>\n    )\n  }\n}\nexport default Footer;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\n class Landing extends Component {\n  render() {\n    return (\n        <div className=\"landing\">\n         <div className=\"dark-overlay landing-inner text-light\"> \n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">Never Miss an Events \n                </h1>\n                <p className=\"lead\"> Create a profile to know you better</p>\n                <hr />\n                 <Link to=\"/register\" className=\"btn btn-lg btn-info mr-2\">Sign Up</Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-info mr-2\">Login</Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default Landing;","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst TextFieldGroup = ({\n  name,\n  placeholder,\n  value,\n  label,\n  error,\n  info,\n  type,\n  onChange,\n  disabled\n}) => {\n  return (\n    <div className=\"form-group\">\n      <input\n        type={type}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        name={name}\n        value={value}\n        onChange={onChange}\n        disabled={disabled}\n      />\n      {info && <small className=\"form-text text-muted\">{info}</small>}\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextFieldGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  info: PropTypes.string,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.string\n};\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextFieldGroup;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reguser } from '../../actions/authActions';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport TextFieldGroup from '../common/TextFieldGroup';\n\n class Register extends Component {\n     constructor() {\n         super();\n         this.state = {\n             handle: '',\n             email: '',\n             password: '',\n             password2:'',\n             errors:{ }\n        };\n     //   this.onChange = this.onChange.bind(this);\n    //   this.onSubmit = this.onSubmit.bind(this);\n     }\n     componentDidMount(){\n      if(this.props.auth.isAuthenticated){\n        this.props.history.push('/dashboard');\n      }\n    }\n     componentWillReceiveProps(nextProps){\n       if(nextProps.errors){\n         this.setState({errors: nextProps.errors});\n       }\n     }\nonChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n}\nonSubmit = (e) => {\n     e.preventDefault(); \n    const nuser =  {\n        handle: this.state.handle,\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.reguser(nuser,this.props.history);\n \n}\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n       <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 m-auto\">\n            <h1 className=\"display-4 text-center\">Sign Up</h1>\n           <p className=\"lead text-center\">Create your account</p>\n           <form noValidate onSubmit={this.onSubmit}>\n                <TextFieldGroup\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                  info=\"This site uses Gravatar so if you want a profile image, use a Gravatar email\"\n                />\n                <TextFieldGroup\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  error={errors.password}\n                />\n                <TextFieldGroup\n                  placeholder=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                  type=\"password\"\n                  value={this.state.confirmPassword}\n                  onChange={this.onChange}\n                  error={errors.confirmPassword}\n                />\n                 <TextFieldGroup\n                  placeholder=\"Handle\"\n                  name=\"handle\"\n                  value={this.state.handle}\n                  onChange={this.onChange}\n                  error={errors.handle}\n                />\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n        </div>\n      </div>\n    </div>\n  </div>\n    )\n  }\n}\n  Register.propTypes = {\n    reguser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n\n  };\n\n  const mapStateToProps = state => ({\n    auth : state.auth,\n    errors: state.errors\n  });\n \nexport default connect(mapStateToProps, { reguser }) (withRouter(Register));\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// import { lUser } from '../../actions/authActions';\n\nclass Dashboard extends Component {\n\n    render() {\n      const { user } = this.props.auth;\n  \n      let dashboardContent;\n          dashboardContent = (\n            <div>\n              <p className=\"lead text-muted\">Welcome {user.email}</p>\n              <p>You have not yet setup a profile, please add some info</p>\n              <Link to=\"/create-profile\" className=\"btn btn-lg btn-info\">\n                Create Profile\n              </Link>\n            </div>\n          );\n  \n      return (\n        <div className=\"dashboard\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <h1 className=\"display-4\">Dashboard</h1>\n                {dashboardContent}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  Dashboard.propTypes = {\n    auth: PropTypes.object.isRequired\n  };\n  \n  const mapStateToProps = state => ({\n    auth: state.auth\n  });\n  \n  export default connect(mapStateToProps)(Dashboard);\n  ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { luser } from '../../actions/authActions';\nimport TextFieldGroup from '../common/TextFieldGroup';\n\n class Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            errors:{ }\n       };\n     //  this.onChange = this.onChange.bind(this);\n     //  this.onSubmit = this.onSubmit.bind(this);\n    }\n    componentDidMount(){  \n      if(this.props.auth.isAuthenticated){\n        this.props.history.push('/dashboard');\n      }\n    }\n    componentWillReceiveProps(nextProps){\n      if(nextProps.auth.isAuthenticated) {\n        this.props.history.push('/dashboard');\n      }\n      if(nextProps.errors){\n        this.setState({errors: nextProps.errors});\n      }\n    }\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit = (e) => {\n          e.preventDefault(); \n        const user =  {\n            email: this.state.email,\n            password: this.state.password\n        };\n        this.props.luser(user);\n    }\n\n  render() {\n    const { errors } = this.state;\n    return (\n        <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n    \n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <p className=\"lead text-center\">Sign in to your account</p>\n              <form onSubmit={this.onSubmit}>\n              <TextFieldGroup\n                  placeholder=\"Email Address\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={this.state.email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n\n                <TextFieldGroup\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                  error={errors.password}\n                />\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                <div class=\"fb-login-button\" data-width=\"\" data-size=\"large\" data-button-type=\"continue_with\" data-auto-logout-link=\"false\" data-use-continue-as=\"false\"></div>\n                <div id=\"fb-root\"></div>\n<script async defer crossorigin=\"anonymous\" src=\"https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v4.0&appId=2404555833134862&autoLogAppEvents=1\"></script>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nLogin.propTypes = {\n  luser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(mapStateToProps,{luser})(Login);","const isEmpty = value =>\n  value === undefined ||\n  value === null ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (typeof value === 'string' && value.trim().length === 0);\n\nexport default isEmpty;\n","import { SET_CURRENT_USER } from '../actions/types';\nimport isEmpty from '../validations/is-empty';\nconst initialState = {\n    isAuthenticated: false,\n    user: {}        \n};\n\nexport default function(state = initialState,action) {\n    switch(action.type){\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            };\n        default: \n            return state;\n\n    }\n\n}","import { GET_ERRORS } from '../actions/types';\nconst initialState = {}\n\n\nexport default function(state = initialState,action) {\n    switch(action.type){\n        case GET_ERRORS:\n            return action.payload;\n        default: \n            return state;\n    }\n\n}","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer'\n\n\nexport default combineReducers({\n    auth: authReducer,\n    errors: errorReducer\n\n}); ","import { createStore,applyMiddleware,compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst midleware = [thunk];\n\nconst store = createStore(rootReducer,initialState,compose(applyMiddleware(...midleware)));\n\nexport default store;","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router,Route,Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Footer from './components/layout/Footer';\nimport Landing from './components/layout/Landing';\nimport Register from './components/authentication/Register';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Login from './components/authentication/Login';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport { setCurrentUser, logoutuser } from './actions/authActions';\n\nif(localStorage.jwtToken){\n  setAuthToken(localStorage.jwtToken);\n  //decoding token and getting user info and exp\n  const decoded = jwt_decode(localStorage.jwtToken);\n  //setting to current user\n store.dispatch(setCurrentUser(decoded));\n //checking for  expired token\n const CurrentTime = Date.now() /1000;\n if (decoded.exp < CurrentTime){\n    store.dispatch(logoutuser());\n    window.location.href ='/login';\n }\n}\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store ={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <div className=\"container\">\n                <Route exact path=\"/register\" component={Register}/>\n                <Route exact path=\"/login\" component={Login}/>\n                <Route exact path=\"/dashboard\" component={Dashboard}/>\n            </div>\n            <Footer />  \n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}